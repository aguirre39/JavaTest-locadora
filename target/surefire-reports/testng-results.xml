<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="24" passed="23" failed="0" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2023-06-21T16:42:20 BRT" name="Surefire suite" finished-at="2023-06-21T16:42:21 BRT" duration-ms="1006">
    <groups>
    </groups>
    <test started-at="2023-06-21T16:42:20 BRT" name="Surefire test" finished-at="2023-06-21T16:42:21 BRT" duration-ms="1006">
      <class name="br.ce.wcaquino.servicos.CalculadoraMockTest">
        <test-method signature="teste()" started-at="2023-06-21T16:42:20 BRT" name="teste" finished-at="2023-06-21T16:42:21 BRT" duration-ms="821" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teste -->
        <test-method signature="devoMostrarDiferencaEntreMockSpy()" started-at="2023-06-21T16:42:20 BRT" name="devoMostrarDiferencaEntreMockSpy" finished-at="2023-06-21T16:42:21 BRT" duration-ms="832" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- devoMostrarDiferencaEntreMockSpy -->
      </class> <!-- br.ce.wcaquino.servicos.CalculadoraMockTest -->
      <class name="br.ce.wcaquino.servicos.CalculadoraTest">
        <test-method signature="deveDividir()" started-at="2023-06-21T16:42:21 BRT" name="deveDividir" finished-at="2023-06-21T16:42:21 BRT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveDividir -->
        <test-method signature="deveSomarDoisValores()" started-at="2023-06-21T16:42:21 BRT" name="deveSomarDoisValores" finished-at="2023-06-21T16:42:21 BRT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveSomarDoisValores -->
        <test-method signature="deveLancarExcecaoAoDividirPorZero() throws br.ce.wcaquino.exceptions.NaoPodeDividirPorZeroException" started-at="2023-06-21T16:42:21 BRT" name="deveLancarExcecaoAoDividirPorZero" finished-at="2023-06-21T16:42:21 BRT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveLancarExcecaoAoDividirPorZero -->
        <test-method signature="deveDividirDoisValores() throws br.ce.wcaquino.exceptions.NaoPodeDividirPorZeroException" started-at="2023-06-21T16:42:21 BRT" name="deveDividirDoisValores" finished-at="2023-06-21T16:42:21 BRT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveDividirDoisValores -->
        <test-method signature="deveSubtrairDoisValores()" started-at="2023-06-21T16:42:21 BRT" name="deveSubtrairDoisValores" finished-at="2023-06-21T16:42:21 BRT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveSubtrairDoisValores -->
      </class> <!-- br.ce.wcaquino.servicos.CalculadoraTest -->
      <class name="br.ce.wcaquino.servicos.CalculoValorLocacaoTest">
        <test-method signature="deveCalcularValorLocacaoConsiderandoDescontos() throws br.ce.wcaquino.exceptions.FilmeSemEstoqueException,br.ce.wcaquino.exceptions.LocadoraException" started-at="2023-06-21T16:42:21 BRT" name="deveCalcularValorLocacaoConsiderandoDescontos[2 Filmes: Sem Desconto]" finished-at="2023-06-21T16:42:21 BRT" duration-ms="54" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveCalcularValorLocacaoConsiderandoDescontos[2 Filmes: Sem Desconto] -->
        <test-method signature="deveCalcularValorLocacaoConsiderandoDescontos() throws br.ce.wcaquino.exceptions.FilmeSemEstoqueException,br.ce.wcaquino.exceptions.LocadoraException" started-at="2023-06-21T16:42:21 BRT" name="deveCalcularValorLocacaoConsiderandoDescontos[4 Filmes: 50%]" finished-at="2023-06-21T16:42:21 BRT" duration-ms="59" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveCalcularValorLocacaoConsiderandoDescontos[4 Filmes: 50%] -->
        <test-method signature="deveCalcularValorLocacaoConsiderandoDescontos() throws br.ce.wcaquino.exceptions.FilmeSemEstoqueException,br.ce.wcaquino.exceptions.LocadoraException" started-at="2023-06-21T16:42:21 BRT" name="deveCalcularValorLocacaoConsiderandoDescontos[3 Filmes: 25%]" finished-at="2023-06-21T16:42:21 BRT" duration-ms="57" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveCalcularValorLocacaoConsiderandoDescontos[3 Filmes: 25%] -->
        <test-method signature="deveCalcularValorLocacaoConsiderandoDescontos() throws br.ce.wcaquino.exceptions.FilmeSemEstoqueException,br.ce.wcaquino.exceptions.LocadoraException" started-at="2023-06-21T16:42:21 BRT" name="deveCalcularValorLocacaoConsiderandoDescontos[7 Filmes: Sem Desconto]" finished-at="2023-06-21T16:42:21 BRT" duration-ms="65" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveCalcularValorLocacaoConsiderandoDescontos[7 Filmes: Sem Desconto] -->
        <test-method signature="deveCalcularValorLocacaoConsiderandoDescontos() throws br.ce.wcaquino.exceptions.FilmeSemEstoqueException,br.ce.wcaquino.exceptions.LocadoraException" started-at="2023-06-21T16:42:21 BRT" name="deveCalcularValorLocacaoConsiderandoDescontos[5 Filmes: 75%]" finished-at="2023-06-21T16:42:21 BRT" duration-ms="60" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveCalcularValorLocacaoConsiderandoDescontos[5 Filmes: 75%] -->
        <test-method signature="deveCalcularValorLocacaoConsiderandoDescontos() throws br.ce.wcaquino.exceptions.FilmeSemEstoqueException,br.ce.wcaquino.exceptions.LocadoraException" started-at="2023-06-21T16:42:21 BRT" name="deveCalcularValorLocacaoConsiderandoDescontos[6 Filmes: 100%]" finished-at="2023-06-21T16:42:21 BRT" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveCalcularValorLocacaoConsiderandoDescontos[6 Filmes: 100%] -->
      </class> <!-- br.ce.wcaquino.servicos.CalculoValorLocacaoTest -->
      <class name="br.ce.wcaquino.servicos.LocacaoServiceTest">
        <test-method signature="naoDeveAlugarFilmeSemEstoque() throws java.lang.Exception" started-at="2023-06-21T16:42:21 BRT" name="naoDeveAlugarFilmeSemEstoque" finished-at="2023-06-21T16:42:21 BRT" duration-ms="13" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- naoDeveAlugarFilmeSemEstoque -->
        <test-method signature="deveProrrogarUmaLocacao()" started-at="2023-06-21T16:42:21 BRT" name="deveProrrogarUmaLocacao" finished-at="2023-06-21T16:42:21 BRT" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveProrrogarUmaLocacao -->
        <test-method signature="deveEnviarEmailParaLocacoesAtrasadas()" started-at="2023-06-21T16:42:21 BRT" name="deveEnviarEmailParaLocacoesAtrasadas" finished-at="2023-06-21T16:42:21 BRT" duration-ms="35" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveEnviarEmailParaLocacoesAtrasadas -->
        <test-method signature="naoDeveAlugarFilmeParaNegativadoSPC() throws java.lang.Exception" started-at="2023-06-21T16:42:21 BRT" name="naoDeveAlugarFilmeParaNegativadoSPC" finished-at="2023-06-21T16:42:21 BRT" duration-ms="38" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- naoDeveAlugarFilmeParaNegativadoSPC -->
        <test-method signature="deveTratarErronoSPC() throws java.lang.Exception" started-at="2023-06-21T16:42:21 BRT" name="deveTratarErronoSPC" finished-at="2023-06-21T16:42:21 BRT" duration-ms="28" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveTratarErronoSPC -->
        <test-method signature="naoDeveAlugarFilmeSemFilme() throws br.ce.wcaquino.exceptions.FilmeSemEstoqueException,br.ce.wcaquino.exceptions.LocadoraException" started-at="2023-06-21T16:42:21 BRT" name="naoDeveAlugarFilmeSemFilme" finished-at="2023-06-21T16:42:21 BRT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- naoDeveAlugarFilmeSemFilme -->
        <test-method signature="naoDeveAlugarFilmeSemUsuario() throws br.ce.wcaquino.exceptions.FilmeSemEstoqueException" started-at="2023-06-21T16:42:21 BRT" name="naoDeveAlugarFilmeSemUsuario" finished-at="2023-06-21T16:42:21 BRT" duration-ms="43" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- naoDeveAlugarFilmeSemUsuario -->
        <test-method signature="deveAlugarFilme() throws java.lang.Exception" started-at="2023-06-21T16:42:21 BRT" name="deveAlugarFilme" finished-at="2023-06-21T16:42:21 BRT" duration-ms="45" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveAlugarFilme -->
        <test-method signature="deveDevolverNaSegundaAoAlugarNoSabado() throws br.ce.wcaquino.exceptions.FilmeSemEstoqueException,br.ce.wcaquino.exceptions.LocadoraException" started-at="2023-06-21T16:42:21 BRT" name="deveDevolverNaSegundaAoAlugarNoSabado" finished-at="2023-06-21T16:42:21 BRT" duration-ms="40" status="SKIP">
          <exception class="org.junit.internal.AssumptionViolatedException">
            <message>
              <![CDATA[got: <false>, expected: is <true>]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.junit.internal.AssumptionViolatedException: got: <false>, expected: is <true>
at org.junit.Assume.assumeThat(Assume.java:95)
at org.junit.Assume.assumeTrue(Assume.java:41)
at br.ce.wcaquino.servicos.LocacaoServiceTest.deveDevolverNaSegundaAoAlugarNoSabado(LocacaoServiceTest.java:125)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:47)
at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:44)
at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)
at org.junit.rules.Verifier$1.evaluate(Verifier.java:35)
at org.junit.rules.ExpectedException$ExpectedExceptionStatement.evaluate(ExpectedException.java:168)
at org.junit.rules.RunRules.evaluate(RunRules.java:20)
at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:271)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:70)
at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:50)
at org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)
at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)
at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)
at org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)
at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)
at org.junit.runners.ParentRunner.run(ParentRunner.java:309)
at org.junit.runner.JUnitCore.run(JUnitCore.java:160)
at org.junit.runner.JUnitCore.run(JUnitCore.java:138)
at org.testng.junit.JUnit4TestRunner.start(JUnit4TestRunner.java:76)
at org.testng.junit.JUnit4TestRunner.run(JUnit4TestRunner.java:61)
at org.testng.TestRunner$1.run(TestRunner.java:691)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.runJUnitWorkers(TestRunner.java:908)
at org.testng.TestRunner.privateRunJUnit(TestRunner.java:720)
at org.testng.TestRunner.run(TestRunner.java:600)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:437)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:431)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:391)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:136)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeMulti(TestNGDirectoryTestSuite.java:198)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:94)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:145)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:428)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:562)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:548)
]]>
            </full-stacktrace>
          </exception> <!-- org.junit.internal.AssumptionViolatedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deveDevolverNaSegundaAoAlugarNoSabado -->
      </class> <!-- br.ce.wcaquino.servicos.LocacaoServiceTest -->
      <class name="OrdemTest">
        <test-method signature="inicia()" started-at="2023-06-21T16:42:21 BRT" name="inicia" finished-at="2023-06-21T16:42:21 BRT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- inicia -->
        <test-method signature="verifica()" started-at="2023-06-21T16:42:21 BRT" name="verifica" finished-at="2023-06-21T16:42:21 BRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifica -->
      </class> <!-- OrdemTest -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
